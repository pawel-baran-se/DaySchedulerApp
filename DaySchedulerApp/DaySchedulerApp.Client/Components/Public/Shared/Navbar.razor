<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
	<a class="navbar-brand" href="@HomePageUri"><i class="fa fa-sharp fa-solid fa-calendar-days"></i> SCHEDULER</a>

	<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
	  <span class="navbar-toggler-icon"></span>
	</button>

	<div class="collapse navbar-collapse" id="navbarSupportedContent">

	  <ul class="navbar-nav me-auto mb-2 mb-lg-0">

		<li class="nav-item">
		  <a class="nav-link @(IsActive(HomePageUri) ? "active" : string.Empty)" aria-current="page" href="@HomePageUri">Home</a>
		</li>

		<li class="nav-item">
		  <a class="nav-link @(IsActive(ProfilePageUri) ? "active" : string.Empty)" aria-current="page" href="@ProfilePageUri">Profile</a>
		</li>

		<li class="nav-item">
		  <a class="nav-link @(IsActive(TaskOverviewUri) ? "active" : string.Empty)" aria-current="page" href="@TaskOverviewUri">Tasks</a>
		</li>

	  </ul>

	  <ul class="navbar-nav ms-auto">
		<li class="nav-item">
		  <a class="nav-link" aria-current="page" href="@LoginPageUri">Login</a>
		</li>
		<li class="nav-item">
		  <a class="nav-link" aria-current="page" href="@RegisterPageUri">Register</a>
		</li>
		<li class="nav-item">
		  <a class="nav-link" aria-current="page" href="@AboutPageUri">About</a>
		</li>
		<li class="nav-item">
		  <a class="nav-link" aria-current="page" href="@ContactPageUri">Contact</a>
		</li>
	  </ul>

	</div>
  </div>
</nav>

@code {

	public const string HomePageUri = "/";
	public const string ProfilePageUri = "/profile";
	public const string TaskOverviewUri = "/tasks";
	public const string LoginPageUri = "/login";
	public const string RegisterPageUri = "/register";
	public const string AboutPageUri = "/about";
	public const string ContactPageUri = "/contact";

	[Inject] public NavigationManager? NavigationManager { get; set; }

	private bool IsActive(string uriToCheck)
	{
		var currentUri = NavigationManager.Uri.Split("/").Skip(3).ToArray();

		if (uriToCheck == HomePageUri)
		{
			if (currentUri.Last().Length == 0)
			{
				return true;
			}
		}
		else
		{
			var uriToCheckSplited = uriToCheck.Split("/").Skip(1).ToArray();

			if (uriToCheckSplited.First() == currentUri.First())
			{
				return true;
			}
		}

		return false;
	}

}
